1. No tipo de estrutura 2, qual seria a influência no tempo de inserção e de busca caso
fosse possível utilizar um ponteiro auxiliar que apontasse para a última posição da
lista?
R.: Caso houvesse um ponteiro auxiliar apontando para a última posião da lista, a complexidade do algoritmo de inserção seria O(1) em vez de O(n) - que é complexidade atual, percorrendo todos os itens da lista até chegar no último para inserir -, pois sempre teríamos acesso direto ao local onde iríamos inserir o novo item. Já para o algoritmo de busca, não haveria diferença em sua complexidade, pois, como a lista é desordenada, não há diferença em começar pelo início ou pelo final da lista. O complexidade para a busca continuaria sendo O(n).

3. Como os valores de entrada fornecidos para este projeto influenciam no tempo de
busca em estruturas baseadas em listas? A ordem dos valores inseridos e buscados
importa? O tamanho dos valores importa? A quantidade de valores importa?
R.: Primeiramente, vale ressaltar que quanto menor a quantidade de valores inseridos, mais rápido será o programa - tanto para inserir quanto para buscar valores - independentemente da estrutura baseada em lista utilizada. Além disso, o tamanho das entrada deve respeitar o limite inferior e superior suportado pelo tipo de dado utilizado na lista (nesse projeto: o tamanho de um inteiro).
Tendo isso em vista, para as listas com inserção desordenada (no início e no fim), os valores de entrada não infuenciam em praticamente nada, pois a inserção é sempre efetuada em um local pré-definido (começo ou fim da lista) e a busca sempre passa por todos os itens da lista. Logo, a complexidade dos algoritmos de busca e de inserção permanece inalterada independentemente dos valores de entrada. A única mudança que poderia ocorrer é: a presença de itens de mesmo valor faria com que a complexidade da busca diminuísse significativamente, pois o valor buscado logo seria encontrado devido à repetição de valores na lista.
Para a lista ordenada, os valores de entrada influenciam, principalmente, no algoritmo de inserção. A inserção é feita de forma ordenada, ou seja, o novo valor é inserido antes de primeiro valor maior que ele (após o maior valor menor que o novo item). Sendo assim, conforme a sequência dos valores de entrada aproxima-se de uma sequência decrescente, o algoritmo de busca aproxima-se da complexidade O(1), pois os novos valores são inseridos próximos do ínicio da lista (quando um valor na lista é maior que o novo, este já é inserido - só percorremos uma pequena parte da lista para então inserir).